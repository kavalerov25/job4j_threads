package ru.job4j.buffer;

public class Buffer {
    private StringBuilder buffer = new StringBuilder();

    /**
     * Блок synchronized {} называется критической секцией. В ней одновременно может находиться только одна нить.*
     */
    public synchronized void add(int value) {
        System.out.print(value);
        buffer.append(value);
    }

    @Override
    /**
     * Объект монитор - это объект, по которому виртуальная машина понимает, что блок кода выполняется нитью.
     * Объект монитора может быть в двух значениях - блок занят или блок свободный. Проверка состояния монитора атомарна.
     */
    public String toString() {
        synchronized (this) {
            return buffer.toString();
        }
    }
    /**
     * В первом случае вешаешь слово synchronized на весь метод.
     * А во втором примере создаешь синхронизированный блок кода сразу же при входе в метод. Он синхронизируется по объекту this, то есть по текущему объекту.
     * Тут уже нет нужды явно указывать какой-то объект, по которому осуществляется синхронизация.
     * Раз словом помечен целый метод, этот метод автоматически будет синхронизированным для всех объектов класса
     */
}